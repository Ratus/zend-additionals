<?php

namespace ZendAdditionalsTest\Stdlib\Hydrator;

require_once(__DIR__ . DIRECTORY_SEPARATOR . 'ObservedEntity.php');

/**
 * Test class for ObservableClassMethods.
 * Generated by PHPUnit on 2012-09-17 at 12:24:42.
 */
class ObservableClassMethodsTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ObservableClassMethods
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new \ZendAdditionals\Stdlib\Hydrator\ObservableClassMethods(false);
    }

    /**
     * @covers ZendAdditionals\Stdlib\Hydrator\ObservableClassMethods::hasOriginal
     * @covers ZendAdditionals\Stdlib\Hydrator\ObservableClassMethods::extractChanges
     * @covers ZendAdditionals\Stdlib\Hydrator\ObservableClassMethods::extractOriginal
     * @covers ZendAdditionals\Stdlib\Hydrator\ObservableClassMethods::setChangesCommitted
     * @covers ZendAdditionals\Stdlib\Hydrator\ObservableClassMethods::hydrate
     * @covers ZendAdditionals\Stdlib\Hydrator\ObservableClassMethods::extract
     */
    public function testTheObservableEntity()
    {
        $original = array(
            'foo' => 1,
            'bar' => 2,
        );
        $entity = new ObservedEntity();
        $this->object->hydrate($original, $entity);
        $this->assertEquals(true, $this->object->hasOriginal($entity));
        $this->assertEquals($original, $this->object->extractOriginal($entity));
        $entity->setBar('otherBar');
        $this->assertEquals($original, $this->object->extractOriginal($entity));
        $this->assertEquals(array('bar' => 'otherBar'), $this->object->extractChanges($entity));
        $this->assertEquals(true, $this->object->setChangesCommitted($entity));
        $this->assertNotEquals($original, $this->object->extractOriginal($entity));
        $this->assertEquals(array('foo' => 1, 'bar' => 'otherBar'), $this->object->extractOriginal($entity));
        $this->assertEquals(array('foo' => 1, 'bar' => 'otherBar'), $this->object->extract($entity));
    }
}

